const fs = require('fs');
const path = require('path');
const simpleGit = require('simple-git');

const REPO_URL = `https://${process.env.GITHUB_TOKEN}@github.com/CGMGMT/GymSync-Frontend.git`;
const REPO_DIR = './gymsync-frontend-temp';
const COMPONENT_PATH = 'src/components';

async function createFrontendComponent(componentName) {
  const git = simpleGit();

  try {
    if (fs.existsSync(REPO_DIR)) {
      fs.rmSync(REPO_DIR, { recursive: true, force: true });
    }

    console.log('🌀 Cloning GymSync-Frontend...');
    await git.clone(REPO_URL, REPO_DIR);
    console.log('✅ Clone complete.');

    const componentDir = path.join(REPO_DIR, COMPONENT_PATH);
    const fileName = `${componentName}.tsx`;
    const filePath = path.join(componentDir, fileName);

    // ✅ Ensure src/components exists
    if (!fs.existsSync(componentDir)) {
      fs.mkdirSync(componentDir, { recursive: true });
      fs.writeFileSync(path.join(componentDir, '.gitkeep'), ''); // helps git track folder
      console.log(`📁 Created folder: ${componentDir}`);
    }

    // ✅ Write the component
    const componentCode = `
import React from 'react';

const ${componentName} = () => {
  return (
    <div>
      <h1>${componentName} Component</h1>
      <p>Generated by Autoflow 🚀</p>
    </div>
  );
};

export default ${componentName};
`;
    fs.writeFileSync(filePath, componentCode.trim());
    console.log(`✅ File written: ${filePath}`);

    // ✅ Push to GitHub
    const repoGit = simpleGit(REPO_DIR);
    await repoGit.add('./*');
    await repoGit.commit(`Autoflow: Created ${componentName} component`);
    const pushResult = await repoGit.push('origin', 'master');
    console.log('🚀 Push result:', pushResult);

  } catch (err) {
    console.error('❌ Autoflow push error:', err.message || err);
  }
}

module.exports = { createFrontendComponent };
